.TH "JX-GITOPS\-GIT\-MERGE" "1" "" "Auto generated by spf13/cobra" "" 
.nh
.ad l


.SH NAME
.PP
jx\-gitops\-git\-merge \- Merge a number of SHAs into the HEAD of the main branch


.SH SYNOPSIS
.PP
\fBjx\-gitops git merge\fP


.SH DESCRIPTION
.PP
Merge a number of SHAs into the HEAD of the main branch.

.PP
This command merges a list of commits into a specified branch. If the branch does not exist among local branches, then it is first created.

.PP
If both \-\-pull\-refs and \-\-sha flags are specified then only those commits specified by \-\-sha are merged into the base branch.

.PP
If \-\-include\-comment or \-\-exclude\-comment flags are specified, then \-\-pull\-number flag needs to be set as well. If only one of \-\-include\-comment or \-\-exclude\-comment, then only that one is used to filter commits while other is ignored. If both are specified, then only those commits which satisfy \-\-include\-comment and do not satisfy the \-\-exclude\-comment regex are added. Only those commits which are reachable by from pull request and are not reachable by base branch are included to be merged into the base branch.


.SH OPTIONS
.PP
\fB\-\-base\-branch\fP=""
    The branch to merge to. If not specified then either $PULL\_BASE\_REF is used or the first entry in $PULL\_REFS is used

.PP
\fB\-\-base\-sha\fP=""
    The SHA to use on the base branch. Iff not specified then $PULL\_BASE\_SHA is used or the first entry in $PULL\_REFS is used

.PP
\fB\-\-dir\fP="."
    The directory in which the git repo is checked out

.PP
\fB\-e\fP, \fB\-\-email\fP=""
    the git user email to use if one is not setup

.PP
\fB\-\-exclude\-comment\fP=""
    the regular expression to filter commit comment to exclude in the merge

.PP
\fB\-\-fake\-in\-cluster\fP[=false]
    for testing: lets you fake running this command inside a kubernetes cluster so that it can create the file: $XDG\_CONFIG\_HOME/git/credentials or $HOME/git/credentials

.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
    help for merge

.PP
\fB\-\-include\-comment\fP=""
    the regular expression to filter commit comment to include in the merge

.PP
\fB\-\-merge\-arg\fP=[]
    the extra arguments to pass to the 'git merge $sha' command to perform the merge

.PP
\fB\-n\fP, \fB\-\-name\fP=""
    the git user name to use if one is not setup

.PP
\fB\-\-pull\-number\fP=""
    The Pull Request number to use when filtering commits to merge

.PP
\fB\-\-pull\-refs\fP=""
    The PullRefs to parse

.PP
\fB\-r\fP, \fB\-\-rebase\fP[=false]
    use git rebase instead of merge

.PP
\fB\-\-remote\fP="origin"
    The name of the remote

.PP
\fB\-\-sha\fP=[]
    The SHA(s) to merge, if not specified then the value of the env var $PULL\_REFS is parsed


.SH EXAMPLE
.PP
jx\-gitops git merge


.SH SEE ALSO
.PP
\fBjx\-gitops\-git(1)\fP


.SH HISTORY
.PP
Auto generated by spf13/cobra
