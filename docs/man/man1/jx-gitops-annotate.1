.TH "JX-GITOPS\-ANNOTATE" "1" "" "Auto generated by spf13/cobra" "" 
.nh
.ad l


.SH NAME
.PP
jx\-gitops\-annotate \- Annotates all kubernetes resources in the given directory tree


.SH SYNOPSIS
.PP
\fBjx\-gitops annotate\fP


.SH DESCRIPTION
.PP
Annotates all kubernetes resources in the given directory tree


.SH OPTIONS
.PP
\fB\-\-dir\fP="."
    the directory to recursively look for the *.yaml or *.yml files

.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
    help for annotate

.PP
\fB\-\-invert\-selector\fP[=false]
    inverts the effect of selector to exclude resources matched by selector

.PP
\fB\-k\fP, \fB\-\-kind\fP=[]
    adds Kubernetes resource kinds to filter on. For kind expressions see: 
\[la]https://github.com/jenkins-x/jx-helpers/tree/master/docs/kind_filters.md\[ra]

.PP
\fB\-\-kind\-ignore\fP=[]
    adds Kubernetes resource kinds to exclude. For kind expressions see: 
\[la]https://github.com/jenkins-x/jx-helpers/tree/master/docs/kind_filters.md\[ra]

.PP
\fB\-\-overwrite\fP[=true]
    Set to false to not overwrite any existing value

.PP
\fB\-p\fP, \fB\-\-pod\-spec\fP[=false]
    annotate the PodSpec in spec.template.metadata.annotations (or spec.jobTemplate.spec.template.metadata.annotations for CronJobs) rather than the top level annotations

.PP
\fB\-\-selector\fP=[]
    adds Kubernetes label selector to filter on, e.g. \-s app=pusher\-wave,heritage=Helm

.PP
\fB\-\-selector\-target\fP=""
    sets which path in the Kubernetes resources to select on instead of metadata.labels.


.SH EXAMPLE
.PP
# updates recursively annotates all resources in the current directory
  jx\-gitops annotate myannotation=cheese another=thing
  # updates recursively all resources
  jx\-gitops annotate \-\-dir myresource\-dir foo=bar
  # remove annotations
  jx\-gitops annotate myannotate\- another\-


.SH SEE ALSO
.PP
\fBjx\-gitops(1)\fP


.SH HISTORY
.PP
Auto generated by spf13/cobra
