.TH "JX-GITOPS\-HELMFILE\-STATUS" "1" "" "Auto generated by spf13/cobra" "" 
.nh
.ad l


.SH NAME
.PP
jx\-gitops\-helmfile\-status \- Updates the git deployment status after a release


.SH SYNOPSIS
.PP
\fBjx\-gitops helmfile status\fP


.SH DESCRIPTION
.PP
Updates the git deployment status after a release


.SH OPTIONS
.PP
\fB\-a\fP, \fB\-\-auto\-inactive\fP[=true]
    if enabled then the the status of previous deployments will be set to inactive

.PP
\fB\-\-deploy\-offset\fP="\-2h"
    releases deployed after this time offset will have their deployments updated. Set to empty to update all. Format is a golang duration string

.PP
\fB\-d\fP, \fB\-\-dir\fP="."
    the directory that contains the content

.PP
\fB\-f\fP, \fB\-\-fail\fP[=false]
    if enabled then fail the boot pipeline if we cannot report the deployment status

.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
    help for status


.SH EXAMPLE
.PP
# update the status in git after a release
  jx\-gitops helmfile status


.SH SEE ALSO
.PP
\fBjx\-gitops\-helmfile(1)\fP


.SH HISTORY
.PP
Auto generated by spf13/cobra
